name: Render and Push Helm Manifests

on:
  push:
    branches:
      - main  # Only render when main changes

jobs:
  render-manifests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, qa]  # Add more if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DEPLOY_PAT }}
          fetch-depth: 0  # Required to push to other branches

      - name: Set Git identity
        uses: fregante/setup-git-user@v1

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Render Helm manifests for ${{ matrix.env }}
        run: |
          BRANCH=env/${{ matrix.env }}
          mkdir -p /tmp/${BRANCH}

          helm template pac rolloutdemo/ \
            --namespace "${{ matrix.env }}" \
            --values values/values.common.yaml \
            --values values/envs/${{ matrix.env }}.yaml \
            > /tmp/${BRANCH}/rollout.yaml
          # Ensure the rendered file is valid YAML
          if ! yq eval . /tmp/${BRANCH}/rollout.yaml; then
            echo "Rendered manifest is not valid YAML"
            exit 1
          fi


      - name: Commit rendered manifests to ${{ matrix.env }} branch
        run: |
          BRANCH=env/${{ matrix.env }}

          # Switch to the env branch (create if it doesn't exist)
          if ! git checkout $BRANCH; then
            git checkout --orphan $BRANCH
            git rm -rf .
            cp /tmp/$BRANCH/rollout.yaml .
            git add rollout.yaml
            git commit -m "${{ github.event.head_commit.message }}"
            git push --set-upstream origin $BRANCH --force
          else
            cp /tmp/$BRANCH/rollout.yaml .
          fi
      - name: Deploy to ${{ matrix.env }}
        run: |
         if ! git diff --quiet HEAD; then
              git add rollout.yaml
              git commit -m "${{ github.event.head_commit.message }}"
              git push --set-upstream origin $BRANCH --force
         fi

